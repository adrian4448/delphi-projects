unit pessoa_Service;

interface
uses
    System.Classes, classe_Pessoa, generics.Collections;

  type TPessoaService = class
    private
      lista: TList<TPessoa>;
    public
      constructor create;
      destructor  destroi;
      procedure   addPessoa(pessoa:TPessoa);
      function    getTotalLista : integer;
      function    getQtdeGrau(grau:integer) : integer;
      function    getStringGrau(grau:integer) : String;
      function    getPercentGrau(grau:integer) : real;
  end;

implementation


{ TPessoaService }

procedure TPessoaService.addPessoa(pessoa: TPessoa);
begin
  self.lista.Add(pessoa);
end;

constructor TPessoaService.create;
begin
  self.lista := TList<TPessoa>.create();
end;

destructor TPessoaService.destroi;
begin
  self.lista.Clear;
end;

function TPessoaService.getPercentGrau(grau: integer): real;
begin
  try
    result := (self.getQtdeGrau(grau) / self.getTotalLista) * 100;
  except
    result := 0;
  end;
end;

function TPessoaService.getQtdeGrau(grau: integer): integer;
var
  p:TPessoa;
begin
  result := 0;
  for p in self.lista do
    begin
      if(p.getGrau = grau) then
        begin
          Inc(result);
        end;
    end;
end;

function TPessoaService.getStringGrau(grau: integer): String;
begin
    case grau of
      1: result := 'Ensino básico ';
      2: result := 'Ensino Médio ';
      3: result := 'Ensino Superior ';
      4: result := 'Pós-graduado ';
      5: result := 'Mestrado ';
      6: result := 'Doutorado ';
    end;    
end;

function TPessoaService.getTotalLista: integer;
begin
  result := self.lista.Count - 1;
end;

end.
